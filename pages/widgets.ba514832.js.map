{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/counter.js","<<jsx-config-pragma.js>>","src/js/timer.js","src/js/widgets.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const counterTemplate = (count) =>\n    `<fieldset class=\"widgets-fieldset widgets-counter\">\n        <legend>Counter</legend>\n        <button class=\"button decrease pointer\" type=\"button\">-</button>\n        <span class=\"js-field-counter\">${count}</span>\n        <button class=\"button increase pointer\" type=\"button\">+</button>\n     </fieldset>`;\n\nexport default class Counter {\n    constructor({ count, selector }) {\n        this.refs = {};\n        this.count = count;\n        this.parent = document.querySelector(selector);\n        this.parent.insertAdjacentHTML('beforeend', counterTemplate(this.count));\n\n        this.refs.valueCount = this.parent.querySelector('.js-field-counter');\n        this.refs.increaseBtn = this.parent.querySelector('.increase');\n        this.refs.decreaseBtn = this.parent.querySelector('.decrease');\n\n        this.refs.increaseBtn.addEventListener('click', this.increaseCount.bind(this));\n        this.refs.decreaseBtn.addEventListener('click', this.decreaseCount.bind(this));\n    }\n\n    render() {\n        this.refs.valueCount.textContent = this.count;\n    }\n\n\n    increaseCount() {\n        this.count += 1;\n        this.render();\n    }\n\n    decreaseCount() {\n        this.count -= 1;\n        this.render();\n    }\n}",null,"const templateTimer = time => {\n    return `<fieldset class=\"widgets-fieldset\">\n              <legend>Timer</legend>\n              <span class=\"timer-field js-timer-field\">${time}</span>\n              <button class=\"button timer success pointer js-btn-start\">start</button>\n              <button class=\"button timer danger pointer js-btn-stop\">stop</button>\n              <button class=\"button timer pointer js-btn-clear\">clear</button>\n            </fieldset>`;\n}\n\nexport default class Timer {\n    constructor({ time, selector }) {\n        this.time = 0;\n        this.startTime = time;\n        this.elapsedTime = 0;\n        this.currentTime = 0;\n        this.hrs = 0;\n        this.mins = 0;\n        this.secs = 0;\n\n        this.intervalId;\n        this.refs = {};\n\n        this.refsTimer = document.querySelector(selector);\n        this.refsTimer.insertAdjacentHTML('beforeend', templateTimer(this.time));\n\n        this.refs.refsField = document.querySelector('.js-timer-field')\n\n        this.refs.btnStart = document.querySelector('.js-btn-start');\n        this.refs.btnStop = document.querySelector('.js-btn-stop');\n        this.refs.btnClear = document.querySelector('.js-btn-clear');\n\n        this.refs.btnStart.addEventListener('click', this.timerStart.bind(this));\n        this.refs.btnStop.addEventListener('click', this.timerStop.bind(this));\n        this.refs.btnClear.addEventListener('click', this.timeClear.bind(this))\n    }\n\n    render(time) {\n        this.refs.refsField.textContent = time;\n    }\n\n    timerStart() {\n        if (this.intervalId) {\n            return\n        }\n\n        this.startTime = Date.now() - this.elapsedTime;\n\n        this.intervalId = setInterval(this.updateTime.bind(this), 75);\n    }\n\n    timerStop() {\n        clearInterval(this.intervalId);\n        this.intervalId = 0;\n    }\n\n    timeClear() {\n        this.refs.refsField.textContent = `00:00:00`;\n\n        clearInterval(this.intervalId);\n        this.intervalId = 0;\n\n        this.startTime = 0;\n        this.elapsedTime = 0;\n        this.currentTime = 0;\n    }\n\n    updateTime() {\n        this.elapsedTime = Date.now() - this.startTime;\n\n        this.secs = Math.floor((this.elapsedTime / 1000) % 60);\n        this.mins = Math.floor((this.elapsedTime / (1000 * 60)) % 60);\n        this.hrs = Math.floor((this.elapsedTime / (1000 * 60 * 60)) % 60);\n\n        this.secs = this.pad(this.secs);\n        this.mins = this.pad(this.mins);\n        this.hrs = this.pad(this.hrs);\n\n        this.time = `${this.hrs}:${this.mins}:${this.secs}`;\n        this.render(this.time)\n\n    }\n\n    pad(unit) {\n        return ((\"0\") + unit).length > 2 ? unit : \"0\" + unit;\n    }\n}","import Counter from './counter.js';\nimport Timer from \"./timer.js\";\nconsole.log(Timer)\n\n\nconst newCounter = new Counter({ count: 0, selector: '.counter' });\n// console.log(newCounter);\n\nconst newTimer = new Timer({ time: 0, selector: '.timer' });\n// console.log(newTimer.refs.refsTimer)"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$4b7e5379ef9b7853$export$2e2bcd8739ae039","Counter","param","count","selector","this","refs","parent","document","querySelector","insertAdjacentHTML","concat","$4b7e5379ef9b7853$var$counterTemplate","valueCount","increaseBtn","decreaseBtn","addEventListener","increaseCount","bind","decreaseCount","textContent","render","$67b5ad8caac4e087$export$2e2bcd8739ae039","Timer","time","startTime","elapsedTime","currentTime","hrs","mins","secs","intervalId","refsTimer","$67b5ad8caac4e087$var$templateTimer","refsField","btnStart","btnStop","btnClear","timerStart","timerStop","timeClear","Date","now","setInterval","updateTime","clearInterval","Math","floor","pad","unit","console","log"],"version":3,"file":"widgets.ba514832.js.map"}
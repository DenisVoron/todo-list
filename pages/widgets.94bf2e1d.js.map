{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECNQ,ICFf,W,sBCQiBgB,EACLC,G,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,S,aACjBC,KAAKC,KAAO,GACZD,KAAKF,MAAQA,EACbE,KAAKE,OAASC,SAASC,cAAcL,GACrCC,KAAKE,OAAOG,mBAAmB,YAbf,SAACP,G,MACrB,2MAG2CQ,OAANR,EAAM,sG,CASKS,CAAgBP,KAAKF,QAEjEE,KAAKC,KAAKO,WAAaR,KAAKE,OAAOE,cAAc,qBACjDJ,KAAKC,KAAKQ,YAAcT,KAAKE,OAAOE,cAAc,aAClDJ,KAAKC,KAAKS,YAAcV,KAAKE,OAAOE,cAAc,aAElDJ,KAAKC,KAAKQ,YAAYE,iBAAiB,QAASX,KAAKY,cAAcC,KAAKb,OACxEA,KAAKC,KAAKS,YAAYC,iBAAiB,QAASX,KAAKc,cAAcD,KAAKb,M,iBAG5ET,IAAA,S,MAAA,WACIS,KAAKC,KAAKO,WAAWO,YAAcf,KAAKF,K,IAI5CP,IAAA,gB,MAAA,WACIS,KAAKF,OAAS,EACdE,KAAKgB,Q,IAGTzB,IAAA,gB,MAAA,WACIS,KAAKF,OAAS,EACdE,KAAKgB,Q,ODnCT,GDEe,CAAY,CAAElB,MAAO,EAAGC,SAAU,Y","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/widgets.js","<<jsx-config-pragma.js>>","src/js/counter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import Counter from './counter.js';\n\nconst newCounter = new Counter({ count: 0, selector: '.counter' });\n// console.log(newCounter);",null,"const counterTemplate = (count) =>\n    `<fieldset class=\"widgets-fieldset widgets-counter\">\n        <legend>Counter</legend>\n        <button class=\"button decrease pointer\" type=\"button\">-</button>\n        <span class=\"js-field-counter\">${count}</span>\n        <button class=\"button increase pointer\" type=\"button\">+</button>\n     </fieldset>`;\n\nexport default class Counter {\n    constructor({ count, selector }) {\n        this.refs = {};\n        this.count = count;\n        this.parent = document.querySelector(selector);\n        this.parent.insertAdjacentHTML('beforeend', counterTemplate(this.count));\n\n        this.refs.valueCount = this.parent.querySelector('.js-field-counter');\n        this.refs.increaseBtn = this.parent.querySelector('.increase');\n        this.refs.decreaseBtn = this.parent.querySelector('.decrease');\n\n        this.refs.increaseBtn.addEventListener('click', this.increaseCount.bind(this));\n        this.refs.decreaseBtn.addEventListener('click', this.decreaseCount.bind(this));\n    }\n\n    render() {\n        this.refs.valueCount.textContent = this.count;\n    }\n\n\n    increaseCount() {\n        this.count += 1;\n        this.render();\n    }\n\n    decreaseCount() {\n        this.count -= 1;\n        this.render();\n    }\n}"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","Counter","param","count","selector","this","refs","parent","document","querySelector","insertAdjacentHTML","concat","$4b7e5379ef9b7853$var$counterTemplate","valueCount","increaseBtn","decreaseBtn","addEventListener","increaseCount","bind","decreaseCount","textContent","render"],"version":3,"file":"widgets.94bf2e1d.js.map"}
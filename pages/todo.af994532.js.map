{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAIA,IAAIC,EACAC,EAAQ,GAEZ,MAAMC,EAAO,CACTC,WAAYC,SAASC,cAAc,oBACnCC,mBAAoBF,SAASC,cAAc,uBA8C/C,EAAAE,EAAAC,aACKC,MAAKC,GAAQT,EAAQS,IACrBC,MAAMC,QAAQC,KAEnBX,EAAKC,WAAWW,iBAAiB,SA/CLC,IAExB,MAAMC,EAAaD,EAAEE,OAAOC,MACtBf,EAAaF,EAAMkB,QAAOC,GAAMA,EAAGC,KAAKC,oBAAoBC,SAASP,EAAWM,wBAEtF,EAAAxB,EAAA0B,SAAWrB,GAEXH,EAAcG,CAAU,IAyC5BD,EAAKI,mBAAmBQ,iBAAiB,UAtCTC,IAC5B,MAAMU,EAAcV,EAAEE,OAAOC,MACvBQ,EAAuB1B,GAA4BC,EAEzD,OAAQwB,GACJ,IAAK,WACD,MAAME,EAAgB,IAAID,GAAsBE,MAAK,CAACC,EAAGC,IAAMD,EAAER,KAAKU,cAAcD,EAAET,SACtF,EAAAvB,EAAA0B,SAAWG,GACX,MACJ,IAAK,YACD,MAAMK,EAAiB,IAAIN,GAAsBE,MAAK,CAACC,EAAGC,IAAMA,EAAET,KAAKU,cAAcF,EAAER,SACvF,EAAAvB,EAAA0B,SAAWQ,GACX,MACJ,IAAK,aACD,MAAMC,EAAkB,IAAIP,GAAsBE,MAAK,CAACC,EAAGC,IAAMA,EAAEI,OAASL,EAAEK,UAC9E,EAAApC,EAAA0B,SAAWS,GACX,MACJ,IAAK,YACD,MAAME,EAAiB,IAAIT,GAAsBE,MAAK,CAACC,EAAGC,IAAMD,EAAEK,OAASJ,EAAEI,UAC7E,EAAApC,EAAA0B,SAAWW,GACX,MACJ,IAAK,WACDvB,QAAQC,IAAI,YACZ,MACJ,IAAK,YACDD,QAAQC,IAAI,aACZ,MACJ,SACI,EAAAf,EAAA0B,SAAWvB,G","sources":["src/js/todoListFilter.js"],"sourcesContent":["import renderToDo from './todoList.js';\nimport { readTodos } from \"../js/todosApi.js\";\n\n\nlet filterValue;\nlet items = [];\n\nconst refs = {\n    todoFilter: document.querySelector('.js-filter-input'),\n    todoFilterSelector: document.querySelector('.js-filter-select'),\n}\n\nconst onQueryInputFilter = (e) => {\n\n    const queryValue = e.target.value;\n    const todoFilter = items.filter(el => el.text.toLocaleLowerCase().includes(queryValue.toLocaleLowerCase()));\n\n    renderToDo(todoFilter);\n\n    filterValue = todoFilter;\n};\n\nconst onFilterSelectorChange = (e) => {\n    const sortByValue = e.target.value;\n    const filterValueForSortBy = filterValue ? filterValue : items;\n\n    switch (sortByValue) {\n        case 'name-asc':\n            const nameAscChange = [...filterValueForSortBy].sort((a, b) => a.text.localeCompare(b.text));\n            renderToDo(nameAscChange);\n            break;\n        case 'name-desc':\n            const nameDescChange = [...filterValueForSortBy].sort((a, b) => b.text.localeCompare(a.text));\n            renderToDo(nameDescChange);\n            break;\n        case 'done-first':\n            const doneFirstChange = [...filterValueForSortBy].sort((a, b) => b.isDone - a.isDone);\n            renderToDo(doneFirstChange);\n            break;\n        case 'done-last':\n            const doneLastChange = [...filterValueForSortBy].sort((a, b) => a.isDone - b.isDone);\n            renderToDo(doneLastChange);\n            break;\n        case 'date-asc':\n            console.log('date-asc')\n            break;\n        case 'date-desc':\n            console.log('date-desc')\n            break;\n        default:\n            renderToDo(items);\n            break;\n    }\n}\n\nreadTodos()\n    .then(data => items = data)\n    .catch(console.log);\n\nrefs.todoFilter.addEventListener('input', onQueryInputFilter);\nrefs.todoFilterSelector.addEventListener('change', onFilterSelectorChange);"],"names":["$byUEZ","parcelRequire","$d0c3f68a04920696$var$filterValue","$d0c3f68a04920696$var$items","$d0c3f68a04920696$var$refs","todoFilter","document","querySelector","todoFilterSelector","$ltUby","readTodos","then","data","catch","console","log","addEventListener","e","queryValue","target","value","filter","el","text","toLocaleLowerCase","includes","default","sortByValue","filterValueForSortBy","nameAscChange","sort","a","b","localeCompare","nameDescChange","doneFirstChange","isDone","doneLastChange"],"version":3,"file":"todo.af994532.js.map"}
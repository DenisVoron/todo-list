class t{constructor({time:t,selector:e}){this.time=0,this.startTime=t,this.elapsedTime=0,this.currentTime=0,this.hrs=0,this.mins=0,this.secs=0,this.intervalId,this.refs={},this.refsTimer=document.querySelector(e),this.refsTimer.insertAdjacentHTML("beforeend",(t=>`<fieldset class="widgets-fieldset">\n              <legend>Timer</legend>\n              <span class="timer-field js-timer-field">${t}</span>\n              <button class="button timer success pointer js-btn-start">start</button>\n              <button class="button timer danger pointer js-btn-stop">stop</button>\n              <button class="button timer pointer js-btn-clear">clear</button>\n            </fieldset>`)(this.time)),this.refs.refsField=document.querySelector(".js-timer-field"),this.refs.btnStart=document.querySelector(".js-btn-start"),this.refs.btnStop=document.querySelector(".js-btn-stop"),this.refs.btnClear=document.querySelector(".js-btn-clear"),this.refs.btnStart.addEventListener("click",this.timerStart.bind(this)),this.refs.btnStop.addEventListener("click",this.timerStop.bind(this)),this.refs.btnClear.addEventListener("click",this.timeClear.bind(this))}render(t){this.refs.refsField.textContent=t}timerStart(){this.intervalId||(this.startTime=Date.now()-this.elapsedTime,this.intervalId=setInterval(this.updateTime.bind(this),75))}timerStop(){clearInterval(this.intervalId),this.intervalId=0}timeClear(){this.refs.refsField.textContent="00:00:00",clearInterval(this.intervalId),this.intervalId=0,this.startTime=0,this.elapsedTime=0,this.currentTime=0}updateTime(){this.elapsedTime=Date.now()-this.startTime,this.secs=Math.floor(this.elapsedTime/1e3%60),this.mins=Math.floor(this.elapsedTime/6e4%60),this.hrs=Math.floor(this.elapsedTime/36e5%60),this.secs=this.pad(this.secs),this.mins=this.pad(this.mins),this.hrs=this.pad(this.hrs),this.time=`${this.hrs}:${this.mins}:${this.secs}`,this.render(this.time)}pad(t){return("0"+t).length>2?t:"0"+t}}console.log(t);new class{constructor({count:t,selector:e}){this.refs={},this.count=t,this.parent=document.querySelector(e),this.parent.insertAdjacentHTML("beforeend",(t=>`<fieldset class="widgets-fieldset widgets-counter">\n        <legend>Counter</legend>\n        <button class="button decrease pointer" type="button">-</button>\n        <span class="js-field-counter">${t}</span>\n        <button class="button increase pointer" type="button">+</button>\n     </fieldset>`)(this.count)),this.refs.valueCount=this.parent.querySelector(".js-field-counter"),this.refs.increaseBtn=this.parent.querySelector(".increase"),this.refs.decreaseBtn=this.parent.querySelector(".decrease"),this.refs.increaseBtn.addEventListener("click",this.increaseCount.bind(this)),this.refs.decreaseBtn.addEventListener("click",this.decreaseCount.bind(this))}render(){this.refs.valueCount.textContent=this.count}increaseCount(){this.count+=1,this.render()}decreaseCount(){this.count-=1,this.render()}}({count:0,selector:".counter"}),new t({time:0,selector:".timer"});
//# sourceMappingURL=widgets.e0d74ace.js.map

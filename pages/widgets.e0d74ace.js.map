{"mappings":"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","sources":["src/js/timer.js","src/js/widgets.js","src/js/counter.js"],"sourcesContent":["const templateTimer = time => {\n    return `<fieldset class=\"widgets-fieldset\">\n              <legend>Timer</legend>\n              <span class=\"timer-field js-timer-field\">${time}</span>\n              <button class=\"button timer success pointer js-btn-start\">start</button>\n              <button class=\"button timer danger pointer js-btn-stop\">stop</button>\n              <button class=\"button timer pointer js-btn-clear\">clear</button>\n            </fieldset>`;\n}\n\nexport default class Timer {\n    constructor({ time, selector }) {\n        this.time = 0;\n        this.startTime = time;\n        this.elapsedTime = 0;\n        this.currentTime = 0;\n        this.hrs = 0;\n        this.mins = 0;\n        this.secs = 0;\n\n        this.intervalId;\n        this.refs = {};\n\n        this.refsTimer = document.querySelector(selector);\n        this.refsTimer.insertAdjacentHTML('beforeend', templateTimer(this.time));\n\n        this.refs.refsField = document.querySelector('.js-timer-field')\n\n        this.refs.btnStart = document.querySelector('.js-btn-start');\n        this.refs.btnStop = document.querySelector('.js-btn-stop');\n        this.refs.btnClear = document.querySelector('.js-btn-clear');\n\n        this.refs.btnStart.addEventListener('click', this.timerStart.bind(this));\n        this.refs.btnStop.addEventListener('click', this.timerStop.bind(this));\n        this.refs.btnClear.addEventListener('click', this.timeClear.bind(this))\n    }\n\n    render(time) {\n        this.refs.refsField.textContent = time;\n    }\n\n    timerStart() {\n        if (this.intervalId) {\n            return\n        }\n\n        this.startTime = Date.now() - this.elapsedTime;\n\n        this.intervalId = setInterval(this.updateTime.bind(this), 75);\n    }\n\n    timerStop() {\n        clearInterval(this.intervalId);\n        this.intervalId = 0;\n    }\n\n    timeClear() {\n        this.refs.refsField.textContent = `00:00:00`;\n\n        clearInterval(this.intervalId);\n        this.intervalId = 0;\n\n        this.startTime = 0;\n        this.elapsedTime = 0;\n        this.currentTime = 0;\n    }\n\n    updateTime() {\n        this.elapsedTime = Date.now() - this.startTime;\n\n        this.secs = Math.floor((this.elapsedTime / 1000) % 60);\n        this.mins = Math.floor((this.elapsedTime / (1000 * 60)) % 60);\n        this.hrs = Math.floor((this.elapsedTime / (1000 * 60 * 60)) % 60);\n\n        this.secs = this.pad(this.secs);\n        this.mins = this.pad(this.mins);\n        this.hrs = this.pad(this.hrs);\n\n        this.time = `${this.hrs}:${this.mins}:${this.secs}`;\n        this.render(this.time)\n\n    }\n\n    pad(unit) {\n        return ((\"0\") + unit).length > 2 ? unit : \"0\" + unit;\n    }\n}","import Counter from './counter.js';\nimport Timer from \"./timer.js\";\nconsole.log(Timer)\n\n\nconst newCounter = new Counter({ count: 0, selector: '.counter' });\n// console.log(newCounter);\n\nconst newTimer = new Timer({ time: 0, selector: '.timer' });\n// console.log(newTimer.refs.refsTimer)","const counterTemplate = (count) =>\n    `<fieldset class=\"widgets-fieldset widgets-counter\">\n        <legend>Counter</legend>\n        <button class=\"button decrease pointer\" type=\"button\">-</button>\n        <span class=\"js-field-counter\">${count}</span>\n        <button class=\"button increase pointer\" type=\"button\">+</button>\n     </fieldset>`;\n\nexport default class Counter {\n    constructor({ count, selector }) {\n        this.refs = {};\n        this.count = count;\n        this.parent = document.querySelector(selector);\n        this.parent.insertAdjacentHTML('beforeend', counterTemplate(this.count));\n\n        this.refs.valueCount = this.parent.querySelector('.js-field-counter');\n        this.refs.increaseBtn = this.parent.querySelector('.increase');\n        this.refs.decreaseBtn = this.parent.querySelector('.decrease');\n\n        this.refs.increaseBtn.addEventListener('click', this.increaseCount.bind(this));\n        this.refs.decreaseBtn.addEventListener('click', this.decreaseCount.bind(this));\n    }\n\n    render() {\n        this.refs.valueCount.textContent = this.count;\n    }\n\n\n    increaseCount() {\n        this.count += 1;\n        this.render();\n    }\n\n    decreaseCount() {\n        this.count -= 1;\n        this.render();\n    }\n}"],"names":["$7e81353768b819eb$export$2e2bcd8739ae039","constructor","time","selector","this","startTime","elapsedTime","currentTime","hrs","mins","secs","intervalId","refs","refsTimer","document","querySelector","insertAdjacentHTML","$7e81353768b819eb$var$templateTimer","refsField","btnStart","btnStop","btnClear","addEventListener","timerStart","bind","timerStop","timeClear","render","textContent","Date","now","setInterval","updateTime","clearInterval","Math","floor","pad","unit","length","console","log","count","parent","$c6bc4ac2a347a568$var$counterTemplate","valueCount","increaseBtn","decreaseBtn","increaseCount","decreaseCount"],"version":3,"file":"widgets.e0d74ace.js.map"}